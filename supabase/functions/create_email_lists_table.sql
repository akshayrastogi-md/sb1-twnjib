-- Create the email_lists table function
create or replace function create_email_lists_table()
returns void
language plpgsql
security definer
as $$
begin
  -- Check if the table already exists
  if not exists (select from pg_tables where schemaname = 'public' and tablename = 'email_lists') then
    -- Create the email_lists table
    create table public.email_lists (
      id bigint generated by default as identity primary key,
      name text not null,
      total_emails integer not null,
      valid_emails integer not null,
      invalid_emails integer not null,
      results jsonb not null default '[]'::jsonb,
      user_id uuid references auth.users(id) on delete cascade not null,
      created_at timestamp with time zone default timezone('utc'::text, now()) not null
    );

    -- Set up RLS (Row Level Security)
    alter table public.email_lists enable row level security;

    -- Create policies
    create policy "Users can view their own lists"
      on public.email_lists for select
      using (auth.uid() = user_id);

    create policy "Users can insert their own lists"
      on public.email_lists for insert
      with check (auth.uid() = user_id);

    create policy "Users can update their own lists"
      on public.email_lists for update
      using (auth.uid() = user_id);

    create policy "Users can delete their own lists"
      on public.email_lists for delete
      using (auth.uid() = user_id);
  end if;
end;
$$;